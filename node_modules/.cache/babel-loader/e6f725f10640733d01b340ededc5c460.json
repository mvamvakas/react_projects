{"ast":null,"code":"export const languages = {\n  Brainfuck: [\"++++++++++[>+++++++>++++++++++>+++<<<-]>++.>+.+++++++\", \"..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.\"],\n  C: [\"#include <stdio.h>\", \"int main()\", \"{\", \"   printf(\\\"Hello, World!\\\");\", \"   return 0;\", \"}\"],\n  \"C#\": [\"using System;\", \"using System.Collections.Generic;\", \"using System.Linq;\", \"using System.Text;\", \"using System.Threading.Tasks;\", \"namespace ConsoleApp1\", \"{\", \"  class Program\", \"{\", \"static void Main(string[] args)\", \"{\", \"  Console.WriteLine(\\\"Hello, world!\\\");\", \"  Console.ReadLine();\", \"  }\", \"}\", \"}\"],\n  \"C++\": [\"#include <iostream>\", \"using namespace std;\", \"int main() \", \"{\", \"    cout << \\\"Hello, World!\\\";\", \"    return 0;\", \"}\"],\n  Clojure: [\"(ns clojure.examples.hello\", \"   (:gen-class))\", \"(defn hello-world []\", \"   (println \\\"Hello World\\\"))\", \"(hello-world)\"],\n  Cobol: [\"*****************************\", \"IDENTIFICATION DIVISION.\", \"PROGRAM-ID. HELLO.\", \"ENVIRONMENT DIVISION.\", \"DATA DIVISION.\", \"PROCEDURE DIVISION.\", \"MAIN SECTION.\", \"DISPLAY \\\"Hello World!\\\"\", \"STOP RUN.\", \"****************************\"],\n  Elixir: [\"IO.puts \\\"Hello world from Elixir\\\"\"],\n  Emojicode: [\"\\uD83D\\uDC07 \\uD83D\\uDC3C \\uD83C\\uDF47\", \"  \\uD83D\\uDC07\\uD83D\\uDC16 \\uD83C\\uDFC1 \\u27A1\\uFE0F \\uD83D\\uDE82 \\uD83C\\uDF47\", \"    \\uD83D\\uDE00 \\uD83D\\uDD24Hello world!\\uD83D\\uDD24\", \"    \\uD83C\\uDF4E 0\", \"  \\uD83C\\uDF49\", \"\\uD83C\\uDF49\"],\n  Erlang: [\"-module(hello_world).\", \"-compile(export_all).\", \"hello() ->\", \"    io:format(\\\"hello world~n\\\").\"],\n  Fortran: [\"PROGRAM HELLO\", \"WRITE (*,100)\", \"STOP\", \"100 FORMAT (' Hello World! ' /)\", \"END\"],\n  Go: [\"package main\", \"\", \"import \\\"fmt\\\"\", \"\", \"func main() {\", \"    fmt.Println(\\\"hello world\\\")\", \"}\"],\n  Haskell: [\"main = putStrLn \\\"Hello, world!\\\"\"],\n  Html: [\"<HTML>\", \"<!-- Hello World in HTML -->\", \"<HEAD>\", \"<TITLE>Hello World!</TITLE>\", \"</HEAD>\", \"<BODY>\", \"Hello World!\", \"</BODY>\", \"</HTML>\"],\n  Java: [\"class HelloWorld\", \"{\", \"    public static void main(String args[])\", \"    {\", \"        System.out.println(\\\"Hello, World\\\");\", \"    }\", \"}\"],\n  Javascript: [\"alert(\\\"Hello, World!\\\");\"],\n  Kotlin: [\"fun main() {\", \"    println(\\\"Hello World!\\\")\", \"}\"],\n  \"Objective-c\": [\"#include <stdio.h>\", \"#include <objpak.h>\", \"int main(int argc,char **argv)\", \"{\", \"    id set = [Set new];\", \"    argv++;while (--argc) [set add:[String str:*argv++]];\", \"    [set do:{ :each | printf(\\\"hello, %s!\\n\\\",[each str]); }];\", \"    return 0;\", \"}\"],\n  Perl: [\"#!/usr/bin/perl\", \"print \\\"Hello, World!\\n\\\";\"],\n  Php: [\"<html>\", \"  <head>\", \"    <title>PHP Test</title>\", \"  </head>\", \"  <body>\", \"    <?php echo '<p>Hello World</p>'; ?> \", \"  </body>\", \"</html>\"],\n  Python: [\"#!/usr/bin/python\", \"print \\\"Hello, world!\\\"\"],\n  Python3: [\"#!/usr/bin/python3\", \"print \\\"Hello, world!\\\"\"],\n  R: [\"print(\\\"Hello World!\\\", quote = FALSE)\"],\n  Ruby: [\"puts 'Hello, world!'\"]\n};","map":{"version":3,"sources":["C:\\Users\\Michael Vamvakas\\Desktop\\GIT\\op-street-cred\\src\\libs\\HelloWorld\\HelloWorldExamples.js"],"names":["languages","Brainfuck","C","Clojure","Cobol","Elixir","Emojicode","Erlang","Fortran","Go","Haskell","Html","Java","Javascript","Kotlin","Perl","Php","Python","Python3","R","Ruby"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG;AACvBC,EAAAA,SAAS,EAAE,CACT,uDADS,EAET,uDAFS,CADY;AAKvBC,EAAAA,CAAC,EAAE,+FALoB;AAavB,QAAM,sTAbiB;AA+BvB,SAAO,2HA/BgB;AAwCvBC,EAAAA,OAAO,EAAE,4HAxCc;AA+CvBC,EAAAA,KAAK,EAAE,+OA/CgB;AA2DvBC,EAAAA,MAAM,EAAE,uCA3De;AA4DvBC,EAAAA,SAAS,EAAE,6OA5DY;AAoEvBC,EAAAA,MAAM,EAAE,qGApEe;AA0EvBC,EAAAA,OAAO,EAAE,oFA1Ec;AAiFvBC,EAAAA,EAAE,EAAE,oGAjFmB;AA0FvBC,EAAAA,OAAO,EAAE,qCA1Fc;AA2FvBC,EAAAA,IAAI,EAAE,8IA3FiB;AAsGvBC,EAAAA,IAAI,EAAE,+IAtGiB;AA+GvBC,EAAAA,UAAU,EAAE,6BA/GW;AAgHvBC,EAAAA,MAAM,EAAE,sDAhHe;AAiHvB,iBAAe,oQAjHQ;AA4HvBC,EAAAA,IAAI,EAAE,iDA5HiB;AA6HvBC,EAAAA,GAAG,EAAE,kJA7HkB;AAuIvBC,EAAAA,MAAM,EAAE,gDAvIe;AAwIvBC,EAAAA,OAAO,EAAE,iDAxIc;AAyIvBC,EAAAA,CAAC,EAAE,0CAzIoB;AA0IvBC,EAAAA,IAAI,EAAE;AA1IiB,CAAlB","sourcesContent":["export const languages = {\r\n  Brainfuck: [\r\n    \"++++++++++[>+++++++>++++++++++>+++<<<-]>++.>+.+++++++\",\r\n    \"..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.\"\r\n  ],\r\n  C: [\r\n    `#include <stdio.h>`,\r\n    `int main()`,\r\n    `{`,\r\n    `   printf(\"Hello, World!\");`,\r\n    `   return 0;`,\r\n    `}`\r\n  ],\r\n  \"C#\": [\r\n    `using System;`,\r\n    `using System.Collections.Generic;`,\r\n    `using System.Linq;`,\r\n    `using System.Text;`,\r\n    `using System.Threading.Tasks;`,\r\n    `namespace ConsoleApp1`,\r\n    `{`,\r\n    `  class Program`,\r\n    `{`,\r\n    `static void Main(string[] args)`,\r\n    `{`,\r\n    `  Console.WriteLine(\"Hello, world!\");`,\r\n    `  Console.ReadLine();`,\r\n    `  }`,\r\n    `}`,\r\n    `}`\r\n  ],\r\n  \"C++\": [\r\n    `#include <iostream>`,\r\n    `using namespace std;`,\r\n    `int main() `,\r\n    `{`,\r\n    `    cout << \"Hello, World!\";`,\r\n    `    return 0;`,\r\n    `}`\r\n  ],\r\n  Clojure: [\r\n    `(ns clojure.examples.hello`,\r\n    `   (:gen-class))`,\r\n    `(defn hello-world []`,\r\n    `   (println \"Hello World\"))`,\r\n    `(hello-world)`\r\n  ],\r\n  Cobol: [\r\n    `*****************************`,\r\n    `IDENTIFICATION DIVISION.`,\r\n    `PROGRAM-ID. HELLO.`,\r\n    `ENVIRONMENT DIVISION.`,\r\n    `DATA DIVISION.`,\r\n    `PROCEDURE DIVISION.`,\r\n    `MAIN SECTION.`,\r\n    `DISPLAY \"Hello World!\"`,\r\n    `STOP RUN.`,\r\n    `****************************`\r\n  ],\r\n  Elixir: [`IO.puts \"Hello world from Elixir\"`],\r\n  Emojicode: [\r\n    `🐇 🐼 🍇`,\r\n    `  🐇🐖 🏁 ➡️ 🚂 🍇`,\r\n    `    😀 🔤Hello world!🔤`,\r\n    `    🍎 0`,\r\n    `  🍉`,\r\n    `🍉`\r\n  ],\r\n  Erlang: [\r\n    `-module(hello_world).`,\r\n    `-compile(export_all).`,\r\n    `hello() ->`,\r\n    `    io:format(\"hello world~n\").`\r\n  ],\r\n  Fortran: [\r\n    `PROGRAM HELLO`,\r\n    `WRITE (*,100)`,\r\n    `STOP`,\r\n    `100 FORMAT (' Hello World! ' /)`,\r\n    `END`\r\n  ],\r\n  Go: [\r\n    `package main`,\r\n    ``,\r\n    `import \"fmt\"`,\r\n    ``,\r\n    `func main() {`,\r\n    `    fmt.Println(\"hello world\")`,\r\n    `}`\r\n  ],\r\n  Haskell: [`main = putStrLn \"Hello, world!\"`],\r\n  Html: [\r\n    `<HTML>`,\r\n    `<!-- Hello World in HTML -->`,\r\n    `<HEAD>`,\r\n    `<TITLE>Hello World!</TITLE>`,\r\n    `</HEAD>`,\r\n    `<BODY>`,\r\n    `Hello World!`,\r\n    `</BODY>`,\r\n    `</HTML>`\r\n  ],\r\n  Java: [\r\n    `class HelloWorld`,\r\n    `{`,\r\n    `    public static void main(String args[])`,\r\n    `    {`,\r\n    `        System.out.println(\"Hello, World\");`,\r\n    `    }`,\r\n    `}`\r\n  ],\r\n  Javascript: [`alert(\"Hello, World!\");`],\r\n  Kotlin: [`fun main() {`, `    println(\"Hello World!\")`, `}`],\r\n  \"Objective-c\": [\r\n    `#include <stdio.h>`,\r\n    `#include <objpak.h>`,\r\n    `int main(int argc,char **argv)`,\r\n    `{`,\r\n    `    id set = [Set new];`,\r\n    `    argv++;while (--argc) [set add:[String str:*argv++]];`,\r\n    `    [set do:{ :each | printf(\"hello, %s!\\n\",[each str]); }];`,\r\n    `    return 0;`,\r\n    `}`\r\n  ],\r\n  Perl: [`#!/usr/bin/perl`, `print \"Hello, World!\\n\";`],\r\n  Php: [\r\n    `<html>`,\r\n    `  <head>`,\r\n    `    <title>PHP Test</title>`,\r\n    `  </head>`,\r\n    `  <body>`,\r\n    `    <?php echo '<p>Hello World</p>'; ?> `,\r\n    `  </body>`,\r\n    `</html>`\r\n  ],\r\n  Python: [`#!/usr/bin/python`, `print \"Hello, world!\"`],\r\n  Python3: [`#!/usr/bin/python3`, `print \"Hello, world!\"`],\r\n  R: [`print(\"Hello World!\", quote = FALSE)`],\r\n  Ruby: [`puts 'Hello, world!'`]\r\n};\r\n"]},"metadata":{},"sourceType":"module"}